{"version":3,"sources":["./src/environments/environment.ts","./src/app/task/task.component.html","./src/app/task/task.component.ts","./src/app/app.component.ts","./src/app/app.component.html","./src/app/app.module.ts","./src/app/tracker.service.ts","./src/app/app-routing.module.ts","./src/main.ts","./$_lazy_route_resource lazy namespace object"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","<!DOCTYPE html>\n<html lang=\"en\">\n<head>\n    <meta charset=\"UTF-8\">\n    <meta http-equiv=\"X-UA-Compatible\" content=\"IE=edge\">\n    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\">\n    <title>Document</title>\n    <link rel=\"stylesheet\" href=\"https://stackpath.bootstrapcdn.com/bootstrap/4.5.2/css/bootstrap.min.css\">\n    <link rel=\"stylesheet\" href=\"https://maxcdn.bootstrapcdn.com/font-awesome/4.7.0/css/font-awesome.min.css\">\n   \n</head>\n<body>\n    <div>\n        \n        <h1 style= \"text-align:center\"><u>Task Tracker</u></h1>\n        <hr>\n        <form #pForm=\"ngForm\" (ngSubmit)=\"storeData(pForm.value)\">\n            <div class=\"form-group\">\n                <mat-form-field>\n                <mat-label for=\"id\">ID</mat-label>\n                <input matInput type=\"text\" class=\"form-control\" name =\"id\" placeholder=\"ID\" ngModel required>\n               </mat-form-field>\n                \n            </div>\n            <div class=\"form-group\">\n                <mat-form-field>\n                <mat-label for=\"name\">Name</mat-label>\n                <input matInput type=\"text\" class=\"form-control\" name =\"name\" placeholder=\"Name\" ngModel required>\n                </mat-form-field>\n                \n            </div>\n            <div class=\"form-group\">\n                <label for=\"task\">Task</label>\n                <input type=\"text\" class=\"form-control\" name =\"task\" placeholder=\"Task\" ngModel required>\n            </div>\n            <div class=\"form-group\">\n                <mat-form-field>\n                <mat-label for=\"dl\">Deadline</mat-label>\n                <input matInput type=\"text\" class=\"form-control\" name =\"dl\" placeholder=\"Deadline\" ngModel required>\n                </mat-form-field>\n                \n            </div>\n            <div>\n            <button mat-stroked-button color=\"primary\" \n            style=\"background-color:cornflowerblue;\" type=\"submit\">Save</button>\n            <button mat-stroked-button color=\"primary\" \n            style=\"background-color:grey;\" type=\"reset\">Reset</button>\n               \n            </div>\n\n            <div *ngIf=\"hasData\">\n                <table class=\"table\">\n                    <thead>\n                        <th>ID</th>\n                        <th>Name</th>\n                        <th>Task</th>\n                        <th>Deadline</th>\n                    </thead>\n                    <tbody>\n                        <tr *ngFor=\"let item of trackers\">\n                            <td>{{item.id}}</td>\n                            <td> {{item.name}}   </td>\n                            <td> {{item.task}}   </td>\n                            <td> {{item.dl}}   </td>\n                        </tr>\n                    </tbody>\n                </table>\n            </div>\n        </form>\n    </div>\n    \n</body>\n</html>","import { Component, OnInit } from '@angular/core';\nimport { TrackerService } from '../tracker.service';\nimport {Tracker} from '../tracker.interface'\nimport { ThrowStmt } from '@angular/compiler';\n@Component({\n  selector: 'app-task',\n  templateUrl: './task.component.html',\n  styleUrls: ['./task.component.css']\n})\nexport class TaskComponent  implements OnInit{\n  trackers: any= [];\n  hasData : boolean = false;\n\n  constructor(public ttracker:TrackerService) { }\n \n  ngOnInit(){\n    this.getData();\n  }\n\n\n  getData(){\n    this.ttracker.gettt().subscribe((data: {})=>{\n        console.log(data);\n        this.trackers=data\n    })\n\n  }\n\n  storeData(pForm:any){\n    console.log(\"<==========>\",pForm,\"<---------->\")\n    this.ttracker.storett(pForm);\n  }\n}\n","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n  title = 'angular-task-tracker';\n}\n","<div>\n  <app-task></app-task>\n</div>","import { NgModule } from '@angular/core';\nimport { BrowserModule } from '@angular/platform-browser';\n\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\nimport { TaskComponent } from './task/task.component';\nimport {MatButtonModule} from '@angular/material/button';\nimport { FormsModule } from '@angular/forms';\nimport {MatInputModule} from '@angular/material/input';\nimport {MatFormFieldModule} from '@angular/material/form-field';\nimport { ServiceWorkerModule } from '@angular/service-worker';\nimport { environment } from '../environments/environment';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\nimport { HttpClientModule } from '@angular/common/http';\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    TaskComponent\n  ],\n  imports: [\n    BrowserModule,\n    AppRoutingModule, MatButtonModule,\n    FormsModule,\n    MatInputModule,\n    MatFormFieldModule, HttpClientModule,\n    ServiceWorkerModule.register('ngsw-worker.js', { enabled: environment.production }), BrowserAnimationsModule\n  ],\n  providers: [],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","import { Injectable } from '@angular/core';\nimport {HttpClient} from '@angular/common/http'\nimport {Tracker} from './tracker.interface'\nimport {map} from 'rxjs/operators'\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class TrackerService {\n\n  constructor(public http:HttpClient) { }\n  public trackers: Tracker []= [];\n  storett(tt:any){\n    this.http.post(\"http://localhost:3000/tracker\",tt).\n    subscribe(result=>console.log(result),error=>console.log(error));\n  }\n\n  gettt()\n  {\n    //this.http.get(\"http://localhost:3000/tracker\").subscribe()\n    return this.http.get<any[]>(\"http://localhost:3000/tracker\").pipe(map(data=>data));\n  }\n\n  \n\n\n  \n}\n","import { NgModule } from '@angular/core';\nimport { RouterModule, Routes } from '@angular/router';\n\nconst routes: Routes = [];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n","function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"zn8P\";"],"sourceRoot":"webpack:///"}